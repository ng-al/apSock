!function(){"use strict";angular.module("apSock",[]);var a="/socket.io/socket.io.js";angular.module("apSock").factory("sockService",["$http","$location","$q","$window",function(b,c,d,e){function f(){if(arguments.length>2)throw new Error("usage: buildSockPath([Sock], [path])");var a,b,c;for(a=0;a<arguments.length;++a)arguments[a]instanceof j&&(c=arguments[a]),angular.isString(arguments[a])&&(b=arguments[a]);return c=c||new j,c.protocol+"://"+c.host+":"+c.port+(b?b:"")}function g(a){return e.execScript?void e.execScript(a):void function(){e.eval.call(e,a)}()}function h(c){return c=c||new j,d(function(d,h){var i;return e.io?void d():(i=f(c,a),void b.get(i).then(function(a){var b=a.data;if(g(b),e.io)return void d();throw new Error("Internal error during processing socket.io.js")},function(){throw new Error("Unable to fetch socket.io library from "+i+".")}))})}function i(a,b){if(!a)throw new Error("registerListener: sock is required.");if(!(a instanceof j))throw new Error("registerListener: sock not recognized as a valid sock");if(!a.channel)throw new Error("registerListener: Channel not specified.");if(!b)throw new Error("registerListener: Callback fn is required.");if(!angular.isFunction(b))throw new Error("registerListener: fn not recogized as a valid callback fn.");if(!e.io)throw new Error("socket.io client library missing.");var c=f(a),d=e.io.connect(c);return d.on(a.channel,function(c){b(a,c)}),d}function j(a,b,d,e){var f=this instanceof j?this:Object.create(j.prototype);b?(f.protocol=a||"http",f.host=b,f.port=d||80,f.channel=e):(f.protocol=a||c.$$protocol,f.host=b||c.$$host,f.port=d||c.$$port,f.channel=e)}return{Sock:j,buildSockPath:f,initializeSocketIo:h,registerListener:i}}])}();